[gd_scene load_steps=17 format=2]

[ext_resource path="res://fps_demo/scripts/NoiseWorld.gd" type="Script" id=1]
[ext_resource path="res://fps_demo/materials/fxaa.shader" type="Shader" id=2]
[ext_resource path="res://fps_demo/scenes/ui/UI.tscn" type="PackedScene" id=8]
[ext_resource path="res://fps_demo/scenes/WorldEnvironment.tscn" type="PackedScene" id=9]
[ext_resource path="res://fps_demo/scenes/platform.tscn" type="PackedScene" id=10]
[ext_resource path="res://fps_demo/scenes/player.tscn" type="PackedScene" id=11]
[ext_resource path="res://fps_demo/materials/edit_cursor.material" type="Material" id=12]
[ext_resource path="res://fps_demo/materials/grass-rock.material" type="Material" id=13]
[ext_resource path="res://fps_demo/scripts/Screenshot.gd" type="Script" id=14]

[sub_resource type="ShaderMaterial" id=1]
shader = ExtResource( 2 )
shader_param/qualitySubpix = 1.0
shader_param/qualityEdgeThreshold = 0.0
shader_param/qualityEdgeThresholdMin = 0.0
shader_param/lumaScale = 6.0

[sub_resource type="Shader" id=2]
code = "// https://www.shadertoy.com/view/4ll3RB

shader_type canvas_item;

// referenced the method of bitmap of iq : https://www.shadertoy.com/view/4dfXWj

uniform float zoom = 0.01;

float P(ivec2 pos, float cha, int id,int a,int b,int c,int d,int e,int f,int g,int h) 
{
	if( id == int(pos.y) )
	{ 
		int pa = a+2*(b+2*(c+2*(d+2*(e+2*(f+2*(g+2*(h))))))); 
		cha = floor(mod(float(pa)/pow(2.,float(pos.x)-1.),2.)); 
	}
	return cha;
}

float gray(vec3 _i)
{
    return _i.x*0.299+_i.y*0.587+_i.z*0.114;
}

void fragment() 
{
	vec2 resolution = 1.0/SCREEN_PIXEL_SIZE;
    vec2 uv = SCREEN_UV;//vec2(floor(FRAGCOORD.x/8./zoom)*8.*zoom,floor(FRAGCOORD.y/12./zoom)*12.*zoom)/resolution;
	//uv = uv;
    ivec2 pos = ivec2(int(mod(FRAGCOORD.x/zoom,8.)),int(mod(FRAGCOORD.y/zoom,12.)));
    vec4 tex = texture(SCREEN_TEXTURE,uv);
    float cha = 0.;
    float g = gray(tex.xyz);
    if( g < .125 )
    {
        cha = P(pos, cha, 11,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 10,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 9,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 8,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 7,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 6,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 5,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 4,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 3,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 2,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 1,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 0,0,0,0,0,0,0,0,0);
    }
    else if( g < .25 ) // .
    {
        cha = P(pos, cha, 11,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 10,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 9,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 8,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 7,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 6,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 5,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 4,0,0,0,1,1,0,0,0);
        cha = P(pos, cha, 3,0,0,0,1,1,0,0,0);
        cha = P(pos, cha, 2,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 1,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 0,0,0,0,0,0,0,0,0);
    }
    else if( g < .375 ) // ,
    {
        cha = P(pos, cha, 11,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 10,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 9,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 8,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 7,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 6,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 5,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 4,0,0,0,1,1,0,0,0);
        cha = P(pos, cha, 3,0,0,0,1,1,0,0,0);
        cha = P(pos, cha, 2,0,0,0,0,1,0,0,0);
        cha = P(pos, cha, 1,0,0,0,1,0,0,0,0);
        cha = P(pos, cha, 0,0,0,0,0,0,0,0,0);
    }
    else if( g < .5 ) // -
    {
        cha = P(pos, cha, 11,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 10,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 9,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 8,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 7,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 6,1,1,1,1,1,1,1,0);
        cha = P(pos, cha, 5,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 4,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 3,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 2,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 1,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 0,0,0,0,0,0,0,0,0);
    }
    else if(g < .625 ) // +
    {
        cha = P(pos, cha, 11,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 10,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 9,0,0,0,1,0,0,0,0);
        cha = P(pos, cha, 8,0,0,0,1,0,0,0,0);
        cha = P(pos, cha, 7,0,0,0,1,0,0,0,0);
        cha = P(pos, cha, 6,1,1,1,1,1,1,1,0);
        cha = P(pos, cha, 5,0,0,0,1,0,0,0,0);
        cha = P(pos, cha, 4,0,0,0,1,0,0,0,0);
        cha = P(pos, cha, 3,0,0,0,1,0,0,0,0);
        cha = P(pos, cha, 2,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 1,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 0,0,0,0,0,0,0,0,0);
    }
    else if(g < .75 ) // *
    {
        cha = P(pos, cha, 11,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 10,0,0,0,1,0,0,0,0);
        cha = P(pos, cha, 9,1,0,0,1,0,0,1,0);
        cha = P(pos, cha, 8,0,1,0,1,0,1,0,0);
        cha = P(pos, cha, 7,0,0,1,1,1,0,0,0);
        cha = P(pos, cha, 6,0,0,0,1,0,0,0,0);
        cha = P(pos, cha, 5,0,0,1,1,1,0,0,0);
        cha = P(pos, cha, 4,0,1,0,1,0,1,0,0);
        cha = P(pos, cha, 3,1,0,0,1,0,0,1,0);
        cha = P(pos, cha, 2,0,0,0,1,0,0,0,0);
        cha = P(pos, cha, 1,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 0,0,0,0,0,0,0,0,0);
    }
    else if(g < .875 ) // #
    {
        cha = P(pos, cha, 11,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 10,0,0,1,0,0,1,0,0);
        cha = P(pos, cha, 9,0,0,1,0,0,1,0,0);
        cha = P(pos, cha, 8,1,1,1,1,1,1,1,0);
        cha = P(pos, cha, 7,0,0,1,0,0,1,0,0);
        cha = P(pos, cha, 6,0,0,1,0,0,1,0,0);
        cha = P(pos, cha, 5,0,1,0,0,1,0,0,0);
        cha = P(pos, cha, 4,0,1,0,0,1,0,0,0);
        cha = P(pos, cha, 3,1,1,1,1,1,1,1,0);
        cha = P(pos, cha, 2,0,1,0,0,1,0,0,0);
        cha = P(pos, cha, 1,0,1,0,0,1,0,0,0);
        cha = P(pos, cha, 0,0,0,0,0,0,0,0,0);
    }
    else // @
    {
        cha = P(pos, cha, 11,0,0,0,0,0,0,0,0);
        cha = P(pos, cha, 10,0,0,1,1,1,1,0,0);
        cha = P(pos, cha, 9,0,1,0,0,0,0,1,0);
        cha = P(pos, cha, 8,1,0,0,0,1,1,1,0);
        cha = P(pos, cha, 7,1,0,0,1,0,0,1,0);
        cha = P(pos, cha, 6,1,0,0,1,0,0,1,0);
        cha = P(pos, cha, 5,1,0,0,1,0,0,1,0);
        cha = P(pos, cha, 4,1,0,0,1,0,0,1,0);
        cha = P(pos, cha, 3,1,0,0,1,1,1,1,0);
        cha = P(pos, cha, 2,0,1,0,0,0,0,0,0);
        cha = P(pos, cha, 1,0,0,1,1,1,1,1,0);
        cha = P(pos, cha, 0,0,0,0,0,0,0,0,0);
    }
    
    vec3 col = tex.xyz/max(tex.x,max(tex.y,tex.z));
    COLOR = vec4(cha*col,1.);
    //COLOR = vec4(col,1.);
    //COLOR = vec4(cha*tex.xyz,1.);
	//COLOR = tex;
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/zoom = 0.01

[sub_resource type="OpenSimplexNoise" id=4]

[sub_resource type="VoxelStreamNoise" id=5]
noise = SubResource( 4 )

[sub_resource type="SphereMesh" id=6]

[sub_resource type="CubeMesh" id=7]

[node name="World" type="Spatial"]
script = ExtResource( 1 )
UI_Noise = NodePath("UI/UI_Noise")

[node name="fxaa" type="ColorRect" parent="."]
material = SubResource( 1 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -0.28479
margin_right = -0.28479
size_flags_horizontal = 3
size_flags_vertical = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="fxaa2" type="ColorRect" parent="."]
visible = false
material = SubResource( 3 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -0.28479
margin_right = -0.28479
size_flags_horizontal = 3
size_flags_vertical = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="UI" parent="." instance=ExtResource( 8 )]
margin_left = -0.475647
margin_right = -0.475647

[node name="UI_Noise" type="VBoxContainer" parent="UI"]
visible = false
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -122.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Seed" type="Label" parent="UI/UI_Noise"]
margin_right = 1024.0
margin_bottom = 14.0
text = "Seed: "

[node name="Octaves" type="Label" parent="UI/UI_Noise"]
margin_top = 18.0
margin_right = 1024.0
margin_bottom = 32.0
text = "Seed: "

[node name="Period" type="Label" parent="UI/UI_Noise"]
margin_top = 36.0
margin_right = 1024.0
margin_bottom = 50.0
text = "Seed: "

[node name="Persistence" type="Label" parent="UI/UI_Noise"]
margin_top = 54.0
margin_right = 1024.0
margin_bottom = 68.0
text = "Seed: "

[node name="Lacunarity" type="Label" parent="UI/UI_Noise"]
margin_top = 72.0
margin_right = 1024.0
margin_bottom = 86.0
text = "Seed: "

[node name="dynamic_memory_usage" type="Label" parent="UI/UI_Noise"]
margin_top = 90.0
margin_right = 1024.0
margin_bottom = 104.0
text = "Seed: "

[node name="static_memory_usage" type="Label" parent="UI/UI_Noise"]
margin_top = 108.0
margin_right = 1024.0
margin_bottom = 122.0
text = "Seed: "

[node name="WorldEnvironment" parent="." instance=ExtResource( 9 )]

[node name="Platform" parent="." instance=ExtResource( 10 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1170.85, 197.34, 888.8 )

[node name="Player" parent="." instance=ExtResource( 11 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1171, 202, 888 )
jump_is_jetpack = true
edit_cursor_sphere_path = NodePath("../edit_cursor_sphere")
edit_cursor_box_path = NodePath("../edit_cursor_box")
world_path = NodePath("..")
terrain_path = NodePath("../VoxelTerrain")
cursor_material_on_add_action = ExtResource( 12 )

[node name="VoxelTerrain" type="VoxelLodTerrain" parent="."]
stream = SubResource( 5 )
view_distance = 1024
lod_count = 6
viewer_path = NodePath("../Player")
material = ExtResource( 13 )

[node name="Screenshot" type="Node" parent="."]
script = ExtResource( 14 )

[node name="edit_cursor_sphere" type="MeshInstance" parent="."]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, 38.6091, 0, 0 )
cast_shadow = 0
mesh = SubResource( 6 )
material/0 = ExtResource( 12 )

[node name="edit_cursor_sphere_OmniLight" type="OmniLight" parent="edit_cursor_sphere"]
transform = Transform( 0.2, 0, 0, 0, 0.2, 0, 0, 0, 0.2, 0, 0, 0 )
light_color = Color( 0.0235294, 0.662745, 0.454902, 1 )
shadow_enabled = true

[node name="edit_cursor_box" type="MeshInstance" parent="."]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, 38.6091, 0, 0 )
cast_shadow = 0
mesh = SubResource( 7 )
material/0 = ExtResource( 12 )

[node name="edit_cursor_box_OmniLight" type="OmniLight" parent="edit_cursor_box"]
transform = Transform( 0.2, 0, 0, 0, 0.2, 0, 0, 0, 0.2, 0, 0, 0 )
light_color = Color( 0.0235294, 0.662745, 0.454902, 1 )
shadow_enabled = true
[connection signal="mouse_captured" from="." to="UI" method="_on_World_mouse_captured"]
[connection signal="mouse_visible" from="." to="UI" method="_on_World_mouse_visible"]
