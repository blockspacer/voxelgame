[gd_scene load_steps=32 format=2]

[ext_resource path="res://fps_demo/textures/hbar/stars.png" type="Texture" id=1]
[ext_resource path="res://fps_demo/fonts/arial/arial.ttf" type="DynamicFontData" id=2]
[ext_resource path="res://fps_demo/textures/hbar/glass.png" type="Texture" id=3]
[ext_resource path="res://fps_demo/textures/hbar/noise.png" type="Texture" id=4]
[ext_resource path="res://fps_demo/textures/hbar/rect_mask.png" type="Texture" id=5]
[ext_resource path="res://fps_demo/textures/hbar/stars_red.png" type="Texture" id=6]
[ext_resource path="res://fps_demo/textures/hbar/Redgreen.png" type="Texture" id=7]
[ext_resource path="res://fps_demo/textures/icons/oxygen-symbol_white_unique.png" type="Texture" id=8]
[ext_resource path="res://fps_demo/textures/icons/cross_white_unique.png" type="Texture" id=9]
[ext_resource path="res://fps_demo/textures/icons/drop-of-liquid_white_unique.png" type="Texture" id=10]
[ext_resource path="res://fps_demo/textures/icons/power_white_unique.png" type="Texture" id=11]
[ext_resource path="res://fps_demo/textures/icons/food_white_unique.png" type="Texture" id=12]
[ext_resource path="res://fps_demo/scenes/ui/SettingsOverlay.tscn" type="PackedScene" id=13]
[ext_resource path="res://fps_demo/textures/blood-splatter-transparent-blood-smear-874x870.png" type="Texture" id=14]
[ext_resource path="res://fps_demo/scripts/InventoryBase.gd" type="Script" id=15]
[ext_resource path="res://fps_demo/scripts/UI.gd" type="Script" id=16]
[ext_resource path="res://fps_demo/scenes/ui/toolsBar.tscn" type="PackedScene" id=17]
[ext_resource path="res://fps_demo/scenes/ui/InventoryItemFlat.tscn" type="PackedScene" id=18]
[ext_resource path="res://fps_demo/scenes/ui/ConfirmWindowDialog.tscn" type="PackedScene" id=19]

[sub_resource type="StyleBoxFlat" id=1]
content_margin_left = 5.0
content_margin_right = 5.0
content_margin_top = 5.0
content_margin_bottom = 5.0
bg_color = Color( 0.0470588, 0.0431373, 0.0431373, 0.223529 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 0, 0, 0, 0.368627 )
corner_radius_top_left = 3
corner_radius_top_right = 3
corner_radius_bottom_right = 3
corner_radius_bottom_left = 3
shadow_color = Color( 0, 0, 0, 0.0431373 )
shadow_size = 3

[sub_resource type="StyleBoxFlat" id=2]
bg_color = Color( 0.6, 0.6, 0.6, 0.160784 )

[sub_resource type="Shader" id=3]
code = "// see https://simonschreibt.de/gat/diablo-3-resource-bubbles/
// see https://www.gamedev.net/blogs/entry/2263632-diablo-3-resource-bubbles/

shader_type canvas_item;
render_mode blend_mix,unshaded;

uniform sampler2D sGlass0;
uniform sampler2D sClip1;
uniform sampler2D sNoise2;
uniform sampler2D sNormalTex3;
uniform sampler2D sStars1;
uniform sampler2D sStars2;
uniform sampler2D sStars3;

uniform vec4 		color_tint : hint_color = vec4(1.0, .44, .44, 0.8);
uniform float cLevel : hint_range(0.0, 1.0) = 1.0;

uniform float bulbness : hint_range(0.0, 0.5) = 0.03; 

uniform float speedBulb : hint_range(0.0, 100.0) = 0.3; 

uniform float speedRotate : hint_range(0.0, 100.0) = 0.3;

void fragment() {
	float timeBulb = TIME * speedBulb;
	float timeRotate = TIME * speedRotate;
	float level=1.0-cLevel;
	vec2 newuv=texture(sNormalTex3, UV).xy;
	float clip=texture(sClip1, UV).x;
	float maskval=UV.y+texture(sNoise2, UV+vec2(0.1,0.3)*timeBulb).x * bulbness;
	float mask=smoothstep(level-0.01, level+0.01, maskval);
	float glowline=min(smoothstep(level-0.05, level, maskval),
		smoothstep(level+0.05, level, maskval))*clip*3.+1.;
	
	vec4 sample1 = texture(sStars1, newuv + vec2(0.1,0)*timeRotate * 1.2) * 1.2;
	vec4 sample2 = texture(sStars2, newuv + vec2(-0.0132,-0.021)*timeRotate * 1.4) * 1.1;
	vec4 sample3 = texture(sStars3, newuv + vec2(0.0107,0.0313)*timeRotate * 1.6);
	sample3.rgb *= glowline;
	COLOR = (sample1 + sample2 + sample3) / 3.0;
	COLOR += texture(sGlass0, UV) / 2.0;
	COLOR *= clip;
	COLOR *= mask;
	COLOR *= color_tint;
	
	
	//COLOR.a = 0.5;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/color_tint = Color( 1, 0.44, 0.44, 0.8 )
shader_param/cLevel = 0.792
shader_param/bulbness = 0.03
shader_param/speedBulb = 0.3
shader_param/speedRotate = 0.3
shader_param/sGlass0 = ExtResource( 3 )
shader_param/sClip1 = ExtResource( 5 )
shader_param/sNoise2 = ExtResource( 4 )
shader_param/sNormalTex3 = ExtResource( 7 )
shader_param/sStars1 = ExtResource( 6 )
shader_param/sStars2 = ExtResource( 1 )
shader_param/sStars3 = ExtResource( 6 )

[sub_resource type="DynamicFont" id=5]
font_data = ExtResource( 2 )

[sub_resource type="Shader" id=6]
code = "// see https://simonschreibt.de/gat/diablo-3-resource-bubbles/
// see https://www.gamedev.net/blogs/entry/2263632-diablo-3-resource-bubbles/

shader_type canvas_item;
render_mode blend_mix,unshaded;

uniform sampler2D sGlass0;
uniform sampler2D sClip1;
uniform sampler2D sNoise2;
uniform sampler2D sNormalTex3;
uniform sampler2D sStars1;
uniform sampler2D sStars2;
uniform sampler2D sStars3;

uniform vec4 		color_tint : hint_color = vec4(1.0, .44, .44, 0.8);
uniform float cLevel : hint_range(0.0, 1.0) = 1.0;

uniform float bulbness : hint_range(0.0, 0.5) = 0.03; 

uniform float speedBulb : hint_range(0.0, 100.0) = 0.2; 

uniform float speedRotate : hint_range(0.0, 100.0) = 0.2;

void fragment() {
	float timeBulb = TIME * speedBulb;
	float timeRotate = TIME * speedRotate;
	float level=1.0-cLevel;
	vec2 newuv=texture(sNormalTex3, UV).xy;
	float clip=texture(sClip1, UV).x;
	float maskval=UV.y+texture(sNoise2, UV+vec2(0.1,0.3)*timeBulb).x * bulbness;
	float mask=smoothstep(level-0.01, level+0.01, maskval);
	float glowline=min(smoothstep(level-0.05, level, maskval),
		smoothstep(level+0.05, level, maskval))*clip*3.+1.;
	
	vec4 sample1 = texture(sStars1, newuv + vec2(0.1,0)*timeRotate * 1.2) * 1.2;
	vec4 sample2 = texture(sStars2, newuv + vec2(-0.0132,-0.021)*timeRotate * 1.4) * 1.1;
	vec4 sample3 = texture(sStars3, newuv + vec2(0.0107,0.0313)*timeRotate * 1.6);
	sample3.rgb *= glowline;
	COLOR = (sample1 + sample2 + sample3) / 3.0;
	COLOR += texture(sGlass0, UV) / 2.0;
	COLOR *= clip;
	COLOR *= mask;
	COLOR *= color_tint;
	
	
	//COLOR.a = 0.5;
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )
shader_param/color_tint = Color( 0.623529, 0.956863, 1, 0.8 )
shader_param/cLevel = 0.352
shader_param/bulbness = 0.03
shader_param/speedBulb = 0.3
shader_param/speedRotate = 0.3
shader_param/sGlass0 = ExtResource( 3 )
shader_param/sClip1 = ExtResource( 5 )
shader_param/sNoise2 = ExtResource( 4 )
shader_param/sNormalTex3 = ExtResource( 7 )
shader_param/sStars1 = ExtResource( 6 )
shader_param/sStars2 = ExtResource( 1 )
shader_param/sStars3 = ExtResource( 6 )

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 6 )
shader_param/color_tint = Color( 0.223529, 0.623529, 0.890196, 0.8 )
shader_param/cLevel = 0.768
shader_param/bulbness = 0.03
shader_param/speedBulb = 0.3
shader_param/speedRotate = 0.3
shader_param/sGlass0 = ExtResource( 3 )
shader_param/sClip1 = ExtResource( 5 )
shader_param/sNoise2 = ExtResource( 4 )
shader_param/sNormalTex3 = ExtResource( 7 )
shader_param/sStars1 = ExtResource( 6 )
shader_param/sStars2 = ExtResource( 1 )
shader_param/sStars3 = ExtResource( 6 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 6 )
shader_param/color_tint = Color( 0.662745, 0.588235, 0.976471, 0.8 )
shader_param/cLevel = 0.352
shader_param/bulbness = 0.03
shader_param/speedBulb = 0.3
shader_param/speedRotate = 0.3
shader_param/sGlass0 = ExtResource( 3 )
shader_param/sClip1 = ExtResource( 5 )
shader_param/sNoise2 = ExtResource( 4 )
shader_param/sNormalTex3 = ExtResource( 7 )
shader_param/sStars1 = ExtResource( 6 )
shader_param/sStars2 = ExtResource( 1 )
shader_param/sStars3 = ExtResource( 6 )

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 6 )
shader_param/color_tint = Color( 1, 0.572549, 0.262745, 0.8 )
shader_param/cLevel = 1.0
shader_param/bulbness = 0.03
shader_param/speedBulb = 0.3
shader_param/speedRotate = 0.3
shader_param/sGlass0 = ExtResource( 3 )
shader_param/sClip1 = ExtResource( 5 )
shader_param/sNoise2 = ExtResource( 4 )
shader_param/sNormalTex3 = ExtResource( 7 )
shader_param/sStars1 = ExtResource( 6 )
shader_param/sStars2 = ExtResource( 1 )
shader_param/sStars3 = ExtResource( 6 )

[sub_resource type="Shader" id=11]
code = "// see https://www.shadertoy.com/view/lsKSWR

shader_type canvas_item;
render_mode blend_mix,unshaded;

uniform vec4 vignette_color_tint : hint_color = vec4(1.0, .0, .0, 1.0);

uniform vec4 decals_color_tint : hint_color = vec4(1.0, .0, .0, 1.0);

uniform float speedPulse : hint_range(0.0, 100.0) = 2.0; 

uniform float intensityPulse : hint_range(0.0, 10.0) = 0.2; 

uniform float intensity : hint_range(0.0, 100.0) = 0.05; 

uniform float decalsBlurSpeed : hint_range(0.0, 100.0) = 0.5;

uniform float decalsBlurIntensity : hint_range(0.0, 100.0) = 10.;

uniform float decalsFlowSpeed : hint_range(0.0, 1.0) = 0.003;

uniform float decalsFlowIntensity : hint_range(0.0, 100.0) = 10.;
	
uniform float bloodSplatterIntensity : hint_range(0.0, 10.0) = 2.00; 

uniform float vignetteExtend : hint_range(0.0, 0.5) = 0.2; 

uniform float vignetteDecalsMix : hint_range(0.0, 1.0) = 0.5; 

uniform sampler2D bloodSplatterTex; 

uniform vec4 ScaleTranslate = vec4(5.0, 5.0, 1.0, 1.0);

// Compute local triangle barycentric coordinates and vertex IDs
void TriangleGrid(vec2 uv,
	out float w1, out float w2, out float w3,
	out ivec2 vertex1, out ivec2 vertex2, out ivec2 vertex3)
{
	// Scaling of the input
	uv *= 3.464; // 2 * sqrt(3)

	// Skew input space into simplex triangle grid
	const mat2 gridToSkewedGrid = mat2(vec2(1.0, 0.0), vec2(-0.57735027, 1.15470054));
	vec2 skewedCoord = gridToSkewedGrid * uv;

	// Compute local triangle vertex IDs and local barycentric coordinates
	ivec2 baseId = ivec2(floor(skewedCoord));
	vec3 temp = vec3(fract(skewedCoord), 0);
	temp.z = 1.0 - temp.x - temp.y;
	if (temp.z > 0.0)
	{
		w1 = temp.z;
		w2 = temp.y;
		w3 = temp.x;
		vertex1 = baseId;
		vertex2 = baseId + ivec2(0, 1);
		vertex3 = baseId + ivec2(1, 0);
	}
	else
	{
		w1 = -temp.z;
		w2 = 1.0 - temp.y;
		w3 = 1.0 - temp.x;
		vertex1 = baseId + ivec2(1, 1);
		vertex2 = baseId + ivec2(1, 0);
		vertex3 = baseId + ivec2(0, 1);
	}
}

vec2 hash_noise(ivec2 p)
{
	return fract(sin(vec2(p) * mat2(vec2(127.1, 311.7), vec2(269.5, 183.3)) )*43758.5453);
}

// By-Example procedural noise at uv
// see https://github.com/Zylann/godot_voxel/issues/90
vec4 ByExampleProceduralNoise(float blur, float flow, sampler2D Tinput, vec2 uv)
{
	// Get triangle info
	float w1, w2, w3;
	ivec2 vertex1, vertex2, vertex3;
	TriangleGrid(uv, w1, w2, w3, vertex1, vertex2, vertex3);
		
	// Assign random offset to each triangle vertex
	vec2 uv1 = uv + hash_noise(vertex1) * flow;
	vec2 uv2 = uv + hash_noise(vertex2) * flow;
	vec2 uv3 = uv + hash_noise(vertex3) * flow;

	// Precompute UV derivatives 
	vec2 duvdx = dFdx(uv)*blur;
	vec2 duvdy = dFdy(uv)*blur;

	// Fetch Gaussian input
	vec4 G1 = textureGrad(Tinput, uv1, duvdx, duvdy).rgba;
	vec4 G2 = textureGrad(Tinput, uv2, duvdx, duvdy).rgba;
	vec4 G3 = textureGrad(Tinput, uv3, duvdx, duvdy).rgba;

	// Variance-preserving blending
	vec4 G = w1*G1 + w2*G2 + w3*G3;

	return G;
}

void fragment() {
	float timePulse = TIME * speedPulse;
	
	vec2 uv = UV.xy;
	
    uv *=  1.0 - uv.yx;   //vec2(1.0)- uv.yx; -> 1.-u.yx; Thanks FabriceNeyret !
    
    float vig = uv.x*uv.y;
	
	float PulseNormalizedZeroToOne = (sin(timePulse)/2.+0.5);
	
    vig /= (intensity + intensityPulse * PulseNormalizedZeroToOne);
	
    vig = pow(vig, vignetteExtend); // change pow for modifying the extend of the  vignette
    vig = 1.-vig;
	vig = clamp(vig, 0., 1.);
	
	float decalsBlur = decalsBlurIntensity*(sin(TIME*decalsBlurSpeed)+0.5/2.);
	float decalsFlow = decalsFlowIntensity*(sin(TIME*decalsFlowSpeed)+0.5/2.);
	vec4 decals = ByExampleProceduralNoise(decalsBlur, decalsFlow, bloodSplatterTex,  UV * ScaleTranslate.xy + ScaleTranslate.zw);
	decals *= decals_color_tint;
	
	decals.a *= vig / bloodSplatterIntensity;
	decals.a = clamp(decals.a, 0., 1.);
	COLOR = mix(vec4(vig * vignette_color_tint), decals, vignetteDecalsMix);
	
}"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )
shader_param/vignette_color_tint = Color( 1, 0, 0, 1 )
shader_param/decals_color_tint = Color( 1, 0, 0, 1 )
shader_param/speedPulse = 2.0
shader_param/intensityPulse = 0.2
shader_param/intensity = 0.05
shader_param/decalsBlurSpeed = 0.5
shader_param/decalsBlurIntensity = 10.0
shader_param/decalsFlowSpeed = 0.003
shader_param/decalsFlowIntensity = 10.0
shader_param/bloodSplatterIntensity = 2.0
shader_param/vignetteExtend = 0.2
shader_param/vignetteDecalsMix = 0.5
shader_param/ScaleTranslate = Plane( 4, 4, 0, 0 )
shader_param/bloodSplatterTex = ExtResource( 14 )

[node name="UI" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 1
script = ExtResource( 16 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="toolsBar" parent="." instance=ExtResource( 17 )]
_slots_dict = {
"rows": [ {
"columns": [ {
"is_draggable_from": false,
"node_path": NodePath("VBoxContainer/MarginContainer/VBoxRows/SlotsHBoxContainer/slot11")
}, {
"is_droppable_in": false,
"node_path": NodePath("VBoxContainer/MarginContainer/VBoxRows/SlotsHBoxContainer/slot12")
}, {
"node_path": NodePath("VBoxContainer/MarginContainer/VBoxRows/SlotsHBoxContainer/slot13")
} ]
}, {
"columns": [ {
"node_path": NodePath("VBoxContainer/MarginContainer/VBoxRows/SlotsHBoxContainer2/slot21")
}, {
"node_path": NodePath("VBoxContainer/MarginContainer/VBoxRows/SlotsHBoxContainer2/slot22")
}, {
"node_path": NodePath("VBoxContainer/MarginContainer/VBoxRows/SlotsHBoxContainer2/slot23")
} ]
} ]
}

[node name="toolsBar2" parent="." instance=ExtResource( 17 )]
anchor_left = 0.679
_slots_dict = {
"rows": [ {
"columns": [ {
"is_draggable_from": false,
"is_droppable_in": false,
"node_path": NodePath("VBoxContainer/MarginContainer/VBoxRows/SlotsHBoxContainer/slot11")
}, {
"is_droppable_in": false,
"node_path": NodePath("VBoxContainer/MarginContainer/VBoxRows/SlotsHBoxContainer/slot12")
}, {
"node_path": NodePath("VBoxContainer/MarginContainer/VBoxRows/SlotsHBoxContainer/slot13")
} ]
}, {
"columns": [ {
"node_path": NodePath("VBoxContainer/MarginContainer/VBoxRows/SlotsHBoxContainer2/slot21")
}, {
"node_path": NodePath("VBoxContainer/MarginContainer/VBoxRows/SlotsHBoxContainer2/slot22")
}, {
"node_path": NodePath("VBoxContainer/MarginContainer/VBoxRows/SlotsHBoxContainer2/slot23")
} ]
} ]
}

[node name="playerStatusBar" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="playerStatusBar"]
anchor_top = 1.0
anchor_bottom = 1.0
margin_top = -228.0
margin_right = 199.0
margin_bottom = -4.0
mouse_filter = 2
size_flags_horizontal = 2
size_flags_vertical = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MarginContainer" type="MarginContainer" parent="playerStatusBar/VBoxContainer"]
margin_right = 121.0
margin_bottom = 224.0
size_flags_horizontal = 2
size_flags_vertical = 2
custom_constants/margin_right = 15
custom_constants/margin_top = 15
custom_constants/margin_left = 15
custom_constants/margin_bottom = 15
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer"]
margin_left = 15.0
margin_top = 15.0
margin_right = 106.0
margin_bottom = 209.0
size_flags_horizontal = 2
size_flags_vertical = 2
custom_constants/separation = 6
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer2" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer"]
margin_right = 91.0
margin_bottom = 34.0
custom_constants/separation = 0

[node name="PanelContainer" type="PanelContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer2"]
margin_right = 91.0
margin_bottom = 34.0
size_flags_horizontal = 2
size_flags_vertical = 2
custom_styles/panel = SubResource( 1 )

[node name="HBoxContainer" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer2/PanelContainer"]
margin_left = 5.0
margin_top = 5.0
margin_right = 86.0
margin_bottom = 29.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="HBoxContainer" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer2/PanelContainer/HBoxContainer"]
margin_right = 50.0
margin_bottom = 24.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer2/PanelContainer/HBoxContainer/HBoxContainer"]
margin_right = 50.0
margin_bottom = 24.0
rect_min_size = Vector2( 50, 24 )
size_flags_horizontal = 0
size_flags_vertical = 0
custom_styles/panel = SubResource( 2 )

[node name="ColorRect" type="ColorRect" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer2/PanelContainer/HBoxContainer/HBoxContainer/Panel"]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect2" type="TextureRect" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer2/PanelContainer/HBoxContainer/HBoxContainer/Panel/ColorRect"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -12.0
margin_top = -12.0
margin_right = 12.0
margin_bottom = 12.0
texture = ExtResource( 9 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer2/PanelContainer/HBoxContainer"]
margin_left = 54.0
margin_top = 2.0
margin_right = 81.0
margin_bottom = 21.0
custom_fonts/font = SubResource( 5 )
text = "100"

[node name="HBoxContainer4" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer"]
margin_top = 40.0
margin_right = 91.0
margin_bottom = 74.0
custom_constants/separation = 0

[node name="PanelContainer" type="PanelContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer4"]
margin_right = 91.0
margin_bottom = 34.0
size_flags_horizontal = 2
size_flags_vertical = 2
custom_styles/panel = SubResource( 1 )

[node name="HBoxContainer" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer4/PanelContainer"]
margin_left = 5.0
margin_top = 5.0
margin_right = 86.0
margin_bottom = 29.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="HBoxContainer" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer4/PanelContainer/HBoxContainer"]
margin_right = 50.0
margin_bottom = 24.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer4/PanelContainer/HBoxContainer/HBoxContainer"]
margin_right = 50.0
margin_bottom = 24.0
rect_min_size = Vector2( 50, 24 )
size_flags_horizontal = 0
size_flags_vertical = 0
custom_styles/panel = SubResource( 2 )

[node name="ColorRect" type="ColorRect" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer4/PanelContainer/HBoxContainer/HBoxContainer/Panel"]
material = SubResource( 7 )
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer4/PanelContainer/HBoxContainer/HBoxContainer/Panel/ColorRect"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -12.0
margin_top = -12.0
margin_right = 12.0
margin_bottom = 12.0
texture = ExtResource( 8 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer4/PanelContainer/HBoxContainer"]
margin_left = 54.0
margin_top = 2.0
margin_right = 81.0
margin_bottom = 21.0
custom_fonts/font = SubResource( 5 )
text = "100"

[node name="HBoxContainer5" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer"]
margin_top = 80.0
margin_right = 91.0
margin_bottom = 114.0
custom_constants/separation = 0

[node name="PanelContainer" type="PanelContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer5"]
margin_right = 91.0
margin_bottom = 34.0
size_flags_horizontal = 2
size_flags_vertical = 2
custom_styles/panel = SubResource( 1 )

[node name="HBoxContainer" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer5/PanelContainer"]
margin_left = 5.0
margin_top = 5.0
margin_right = 86.0
margin_bottom = 29.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="HBoxContainer" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer5/PanelContainer/HBoxContainer"]
margin_right = 50.0
margin_bottom = 24.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer5/PanelContainer/HBoxContainer/HBoxContainer"]
margin_right = 50.0
margin_bottom = 24.0
rect_min_size = Vector2( 50, 24 )
size_flags_horizontal = 0
size_flags_vertical = 0
custom_styles/panel = SubResource( 2 )

[node name="ColorRect" type="ColorRect" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer5/PanelContainer/HBoxContainer/HBoxContainer/Panel"]
material = SubResource( 8 )
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer5/PanelContainer/HBoxContainer/HBoxContainer/Panel/ColorRect"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -12.0
margin_top = -12.0
margin_right = 12.0
margin_bottom = 12.0
texture = ExtResource( 10 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer5/PanelContainer/HBoxContainer"]
margin_left = 54.0
margin_top = 2.0
margin_right = 81.0
margin_bottom = 21.0
custom_fonts/font = SubResource( 5 )
text = "100"

[node name="HBoxContainer6" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer"]
margin_top = 120.0
margin_right = 91.0
margin_bottom = 154.0
custom_constants/separation = 0

[node name="PanelContainer" type="PanelContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer6"]
margin_right = 91.0
margin_bottom = 34.0
size_flags_horizontal = 2
size_flags_vertical = 2
custom_styles/panel = SubResource( 1 )

[node name="HBoxContainer" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer6/PanelContainer"]
margin_left = 5.0
margin_top = 5.0
margin_right = 86.0
margin_bottom = 29.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="HBoxContainer" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer6/PanelContainer/HBoxContainer"]
margin_right = 50.0
margin_bottom = 24.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer6/PanelContainer/HBoxContainer/HBoxContainer"]
margin_right = 50.0
margin_bottom = 24.0
rect_min_size = Vector2( 50, 24 )
size_flags_horizontal = 0
size_flags_vertical = 0
custom_styles/panel = SubResource( 2 )

[node name="ColorRect" type="ColorRect" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer6/PanelContainer/HBoxContainer/HBoxContainer/Panel"]
material = SubResource( 9 )
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer6/PanelContainer/HBoxContainer/HBoxContainer/Panel/ColorRect"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -12.0
margin_top = -12.0
margin_right = 12.0
margin_bottom = 12.0
texture = ExtResource( 11 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer6/PanelContainer/HBoxContainer"]
margin_left = 54.0
margin_top = 2.0
margin_right = 81.0
margin_bottom = 21.0
custom_fonts/font = SubResource( 5 )
text = "100"

[node name="HBoxContainer7" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer"]
margin_top = 160.0
margin_right = 91.0
margin_bottom = 194.0
custom_constants/separation = 0

[node name="PanelContainer" type="PanelContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer7"]
margin_right = 91.0
margin_bottom = 34.0
size_flags_horizontal = 2
size_flags_vertical = 2
custom_styles/panel = SubResource( 1 )

[node name="HBoxContainer" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer7/PanelContainer"]
margin_left = 5.0
margin_top = 5.0
margin_right = 86.0
margin_bottom = 29.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="HBoxContainer" type="HBoxContainer" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer7/PanelContainer/HBoxContainer"]
margin_right = 50.0
margin_bottom = 24.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer7/PanelContainer/HBoxContainer/HBoxContainer"]
margin_right = 50.0
margin_bottom = 24.0
rect_min_size = Vector2( 50, 24 )
size_flags_horizontal = 0
size_flags_vertical = 0
custom_styles/panel = SubResource( 2 )

[node name="ColorRect" type="ColorRect" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer7/PanelContainer/HBoxContainer/HBoxContainer/Panel"]
material = SubResource( 10 )
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer7/PanelContainer/HBoxContainer/HBoxContainer/Panel/ColorRect"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -12.0
margin_top = -12.0
margin_right = 12.0
margin_bottom = 12.0
texture = ExtResource( 12 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="playerStatusBar/VBoxContainer/MarginContainer/VBoxContainer/HBoxContainer7/PanelContainer/HBoxContainer"]
margin_left = 54.0
margin_top = 2.0
margin_right = 81.0
margin_bottom = 21.0
custom_fonts/font = SubResource( 5 )
text = "100"

[node name="VBox" type="VBoxContainer" parent="."]
visible = false
anchor_top = 1.0
anchor_bottom = 1.0
margin_top = -49.0
margin_right = 64.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="FPS" type="Label" parent="VBox"]
margin_right = 64.0
margin_bottom = 14.0
text = "FPS: "
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Position" type="Label" parent="VBox"]
margin_top = 18.0
margin_right = 64.0
margin_bottom = 32.0
text = "Position:: "
__meta__ = {
"_edit_use_anchors_": false
}

[node name="InventoryTrashAreaFullscreen" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 7
size_flags_vertical = 7
__meta__ = {
"_edit_use_anchors_": false
}

[node name="InventoryDragNDropAreaFullscreen" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 1
size_flags_horizontal = 3
size_flags_vertical = 3
script = ExtResource( 15 )
__meta__ = {
"_edit_use_anchors_": false
}
_allowed_container_paths = [ NodePath("../toolsBar"), NodePath("../toolsBar2") ]
_drag_on_slot_behavior = 0
_drop_confirm_dialog_NodePath = NodePath("../ConfirmWindowDialog")
_allowed_trash_area_paths = [ NodePath("../InventoryTrashAreaFullscreen") ]
_item_base = ExtResource( 18 )

[node name="MenuOverlay" parent="." instance=ExtResource( 13 )]
margin_left = 1.0
margin_right = 1.0

[node name="OnDamagedOverlay" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[node name="BloodScreenDamage" type="ColorRect" parent="OnDamagedOverlay"]
material = SubResource( 12 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ConfirmWindowDialog" parent="." instance=ExtResource( 19 )]
[connection signal="mouse_captured" from="." to="MenuOverlay" method="_on_UI_mouse_captured"]
[connection signal="mouse_visible" from="." to="MenuOverlay" method="_on_UI_mouse_visible"]
