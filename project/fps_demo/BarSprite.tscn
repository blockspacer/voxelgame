[gd_scene load_steps=9 format=2]

[ext_resource path="res://fps_demo/textures/hbar/stars.png" type="Texture" id=1]
[ext_resource path="res://fps_demo/textures/hbar/glass.png" type="Texture" id=2]
[ext_resource path="res://fps_demo/textures/hbar/noise.png" type="Texture" id=3]
[ext_resource path="res://fps_demo/textures/hbar/rect_mask.png" type="Texture" id=4]
[ext_resource path="res://fps_demo/textures/hbar/stars_red.png" type="Texture" id=5]
[ext_resource path="res://fps_demo/textures/hbar/Redgreen.png" type="Texture" id=6]

[sub_resource type="Shader" id=1]
code = "// see https://simonschreibt.de/gat/diablo-3-resource-bubbles/
// see https://www.gamedev.net/blogs/entry/2263632-diablo-3-resource-bubbles/

shader_type canvas_item;
render_mode blend_mix,unshaded;

uniform sampler2D sGlass0;
uniform sampler2D sClip1;
uniform sampler2D sNoise2;
uniform sampler2D sNormalTex3;
uniform sampler2D sStars1;
uniform sampler2D sStars2;
uniform sampler2D sStars3;

uniform vec4 		color_tint : hint_color = vec4(1.0, .44, .44, 0.8);		
uniform float cLevel : hint_range(0.0, 1.0) = 1.0;

uniform float bulbness : hint_range(0.0, 0.5) = 0.03; 

uniform float speedBulb : hint_range(0.0, 100.0) = 0.2; 

uniform float speedRotate : hint_range(0.0, 100.0) = 0.2;

void fragment() {
	float timeBulb = TIME * speedBulb;
	float timeRotate = TIME * speedRotate;
	float level=1.0-cLevel;
	vec2 newuv=texture(sNormalTex3, UV).xy;
	float clip=texture(sClip1, UV).x;
	float maskval=UV.y+texture(sNoise2, UV+vec2(0.1,0.3)*timeBulb).x * bulbness;
	float mask=smoothstep(level-0.01, level+0.01, maskval);
	float glowline=min(smoothstep(level-0.05, level, maskval),
		smoothstep(level+0.05, level, maskval))*clip*3.+1.;
	
	vec4 sample1 = texture(sStars1, newuv + vec2(0.1,0)*timeRotate * 1.2) * 1.2;
	vec4 sample2 = texture(sStars2, newuv + vec2(-0.0132,-0.021)*timeRotate * 1.4) * 1.1;
	vec4 sample3 = texture(sStars3, newuv + vec2(0.0107,0.0313)*timeRotate * 1.6);
	sample3.rgb *= glowline;
	COLOR = (sample1 + sample2 + sample3) / 3.0;
	COLOR += texture(sGlass0, UV) / 2.0;
	COLOR *= clip;
	COLOR *= mask;
	COLOR *= color_tint;
	
	
	//COLOR.a = 0.5;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/color_tint = Color( 1, 0.44, 0.44, 0.8 )
shader_param/cLevel = 1.0
shader_param/bulbness = 0.03
shader_param/speedBulb = 0.2
shader_param/speedRotate = 0.2
shader_param/sGlass0 = ExtResource( 2 )
shader_param/sClip1 = ExtResource( 4 )
shader_param/sNoise2 = ExtResource( 3 )
shader_param/sNormalTex3 = ExtResource( 6 )
shader_param/sStars1 = ExtResource( 5 )
shader_param/sStars2 = ExtResource( 1 )
shader_param/sStars3 = ExtResource( 5 )

[node name="BarSprite" type="Sprite"]
material = SubResource( 2 )
texture = ExtResource( 4 )
region_filter_clip = true
